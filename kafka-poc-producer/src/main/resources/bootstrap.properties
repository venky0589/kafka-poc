
spring.cloud.config.name=kafka-poc-producer
#spring.cloud.config.discovery.service-id=config-server
#spring.cloud.config.discovery.enabled=true
 
#eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8082/eureka}
spring.cloud.config.uri: http://localhost:8081
spring.cloud.config.username=root
spring.cloud.config.password=s3cr3t

spring.main.banner-mode=off

spring.h2.console.enabled=true
 
# ===============================
# DB
# ===============================
 
spring.datasource.url=jdbc:h2:file:~/kafka-poc-producer;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
 
# ===============================
# JPA / HIBERNATE
# ===============================
 
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

messag.datasource.url=http://localhost:8082/message
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.group-id=message
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=com.letuslearn.kafkapoc.kafka.serialization.AvroDeserializer
#spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-deserializer=com.letuslearn.kafkapoc.kafka.serialization.AvroDeserializer
kafka.topic.boot=message1.t

kafka.bootstrap-servers=localhost:9092
